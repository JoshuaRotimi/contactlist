{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","name","email","phone","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","className","onClick","style","cursor","float","bind","to","color","marginRight","Contacts","Fragment","key","Header","href","branding","About","NotFound","TextInputGroup","label","placeholder","onChange","errors","htmlFor","classnames","AddContact","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.97ecf687.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer =(state, action) => {\n    switch (action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact =>\n                    contact.id !== action.payload)\n\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload,\n                    ...state.contacts]\n\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact =>\n                contact.id === action.payload.id ? (contact\n                = action.payload): contact)\n\n            };\n        default:\n            return state;\n\n    }\n};\n\nexport class Provider extends Component {\n    state = {\n        contacts: [\n            {\n                id: '1',\n                name: 'John Doe',\n                email: 'johndoe@gmail.com',\n                phone: '555-3421',\n\n            },\n        ],\n        dispatch: (action) => {\n            this.setState((state) => reducer(state,action))\n        }\n    };\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        this.setState({contacts: res.data})\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        );\n    }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from \"react\";\nimport {Consumer} from \"../../context\";\nimport axios from 'axios';\nimport {Link} from \"react-router-dom\";\n\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n        \n    };\n\n    onShowClick = () => {\n        this.setState({showContactInfo: !this.state.showContactInfo})\n    };\n    onDeleteClick = async (id, dispatch) => {\n        try {\n            await axios.delete(`https://jsonplaceholder.typicode.com/users${id}`);\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        }catch (e) {\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        }\n\n\n    };\n\n\n    render() {\n        const {id, name, email, phone} = this.props.contact;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                 return (\n                     <div className='card card-body mb-3'>\n                         <h4>{name}{' '}\n                             <i onClick={this.onShowClick} className='fas fa-sort-down'/>\n                             <i className='fas fa-times'\n                                style={{cursor: 'pointer', float: 'right'}}\n                                onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                             />\n                             <Link to={`contact/edit/${id}`}>\n                                 <i\n                                     className='fas fa-pencil-alt'\n                                     style={{\n                                         cursor: 'pointer',\n                                         float: 'right',\n                                         color: 'black',\n                                         marginRight: '1rem'\n                                     }}\n                                 />\n                             </Link>\n                         </h4>\n                         {this.state.showContactInfo ? (\n                             <ul className='list-group'>\n                                 <li className='list-group-item'>Email: {email}</li>\n                                 <li className='list-group-item'>Phone number: {phone}</li>\n                             </ul>) : null }\n                     </div>\n                 )\n                }}\n\n            </Consumer>\n\n\n\n\n\n        );\n    }\n}\n\nexport default Contact\n","import React, {Component} from \"react\";\nimport Contact from \"./Contact\";\nimport {Consumer} from \"../../context\";\n\nclass Contacts extends Component {\n\n    render() {\n        return (\n            <Consumer>\n                {value => {\n                    const {contacts} = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className='display-4 mb-2'><span className='text-danger'>Contact</span> List</h1>\n                            {contacts.map(contact => (\n                                <Contact\n                                    key={contact.id}\n                                    contact={contact}\n                                />\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        );\n\n    }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nconst Header = (props) => (\n    <nav className='navbar navbar-expand-sm navbar-dark bg-dark mb-3 py-0'>\n        <div className='container'>\n            <a href=\"/\" className='navbar-brand'>{props.branding}</a>\n            <div>\n                <ul className='navbar-nav mr-auto'>\n                    <li className='nav-item'>\n                        <Link to=\"/\" className='nav-link'>\n                            <i className='fas-fa-home'/>\n                            Home\n                        </Link>\n                    </li>\n                    <li className='nav-item'>\n                        <Link to=\"/contact/add\" className='nav-link'>\n                            <i className='fas-fa-plus'/>\n                            Add Contact\n                        </Link>\n                    </li>\n                    <li className='nav-item'>\n                        <Link to=\"/about\" className='nav-link'>\n                            <i className='fas-fa-question'/>\n                            About\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n);\n\nexport default Header;\n","import React from \"react\";\n\nconst About = () => {\n    return (\n        <div>\n            <h1 className='display-4'>About Contact Manager</h1>\n            <p className='lead'>Simple App to manage contacts</p>\n            <p className='text-secondary'>Version 1.0.0</p>\n        </div>\n    )\n};\n\nexport default About;\n","import React from \"react\";\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h1 className='display-4'><span className='text-danger'>404</span> Page Not Found</h1>\n            <p className='lead'>Sorry, that page does not exist</p>\n        </div>\n    )\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    errors\n}) => {\n    return (\n        <div className='form-group'>\n            <label htmlFor={name}>{label}</label>\n            <input\n                type={type}\n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': errors\n                })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n            />\n            {errors &&  <div className='invalid-feedback'>{errors}</div>}\n\n\n        </div>\n    )\n    }\n;\n\nexport default TextInputGroup;\n","import React, {Component} from \"react\";\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone } = this.state;\n\n        if (name === ''){\n            this.setState({errors: {name:'Name is required'}});\n            return;\n        }\n        if (email === ''){\n            this.setState({errors: {email:'Email is required'}});\n            return;\n        }\n        if (phone === ''){\n            this.setState({errors: {phone:'Phone is required'}});\n            return;\n        }\n\n        const newContact = {\n            name,\n            email,\n            phone,\n            errors: {}\n        };\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n\n        dispatch({type: 'ADD_CONTACT', payload:res.data});\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/')\n\n\n    };\n\n\n    render() {\n        const {name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                     const {dispatch} = value;\n                     return (\n                         <div className='card mb-3'>\n                             <div className='card-header'>\n                                 Add Contact\n                             </div>\n                             <div className='card-body'>\n                                 <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                   <TextInputGroup\n                                       label='Name'\n                                       name='name'\n                                       type='text'\n                                       placeholder='Enter Name...'\n                                       value={name}\n                                       onChange={this.onChange}\n                                       errors={errors.name}\n                                   />\n                                     <TextInputGroup\n                                         label='Email'\n                                         name='email'\n                                         type='email'\n                                         placeholder='Enter Email Address'\n                                         value={email}\n                                         onChange={this.onChange}\n                                         errors={errors.email}\n                                     />\n                                     <TextInputGroup\n                                         label='Phone'\n                                         name='phone'\n                                         type='text'\n                                         placeholder='Enter Phone number'\n                                         value={phone}\n                                         onChange={this.onChange}\n                                         errors={errors.phone}\n                                     />\n\n                                     <input\n                                         type=\"submit\"\n                                         value='Add Contact'\n                                         className='btn btn-light btn-block'\n                                     />\n                                 </form>\n\n                             </div>\n                         </div>\n                     )\n                 }}\n            </Consumer>\n        );\n\n\n\n\n    }\n\n}\n\nexport default AddContact;\n","import React, {Component} from \"react\";\nimport {Consumer} from \"../../context\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from 'axios';\n\n\nclass EditContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    };\n    async componentDidMount() {\n        const {id} = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n        this.setState({\n            name:contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n\n        const {name, email, phone } = this.state;\n\n        if (name === ''){\n            this.setState({errors: {name:'Name is required'}});\n            return;\n        }\n        if (email === ''){\n            this.setState({errors: {email:'Email is required'}});\n            return;\n        }\n        if (phone === ''){\n            this.setState({errors: {phone:'Phone is required'}});\n            return;\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone\n        };\n\n        const {id} = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push('/')\n\n\n    };\n\n\n    render() {\n        const {name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const {dispatch} = value;\n                    return (\n                        <div className='card mb-3'>\n                            <div className='card-header'>\n                                Edit Contact\n                            </div>\n                            <div className='card-body'>\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup\n                                        label='Name'\n                                        name='name'\n                                        type='text'\n                                        placeholder='Enter Name...'\n                                        value={name}\n                                        onChange={this.onChange}\n                                        errors={errors.name}\n                                    />\n                                    <TextInputGroup\n                                        label='Email'\n                                        name='email'\n                                        type='email'\n                                        placeholder='Enter Email Address'\n                                        value={email}\n                                        onChange={this.onChange}\n                                        errors={errors.email}\n                                    />\n                                    <TextInputGroup\n                                        label='Phone'\n                                        name='phone'\n                                        type='text'\n                                        placeholder='Enter Phone number'\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        errors={errors.phone}\n                                    />\n\n                                    <input\n                                        type=\"submit\"\n                                        value='Update Contact'\n                                        className='btn btn-light btn-block'\n                                    />\n                                </form>\n\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        );\n\n\n\n\n    }\n\n}\n\nexport default EditContact;\n","import React from 'react';\nimport './App.css';\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport {Provider} from \"./context\";\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\">\n                        <Header branding={'Contact Manager'}/>\n                        <div className='container'>\n                            <Switch>\n                                <Route exact path='/' component={Contacts}/>\n                                <Route exact path='/contact/add' component={AddContact}/>\n                                <Route path='/contact/edit/:id' component={EditContact}/>\n                                <Route exact path='/about' component={About}/>\n                                <Route component={NotFound}/>\n\n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n\n            </Provider>\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}